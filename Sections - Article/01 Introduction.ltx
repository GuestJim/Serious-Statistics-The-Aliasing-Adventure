\section{Introduction}

As PC gamers we are (usually) blessed with a number of options in the games we play, for tweaking performance and visual quality.
Textures, lighting and shadows, tessellation and more can all be under our control, and each has its impact on our experience.
One setting present in many if not all modern PC games that can dramatically impact performance and quality is anti-aliasing and, to be honest, I never really understood how it works.
Sure we have the general idea that super-sampling is in effect running at a higher resolution and then downscaling, but then what is multi-sampling?
How do post-processing methods work, like the very common FXAA and often favored SMAA?

As the title of this article suggests, I decided to do some research to find out how a number of these solutions work, and made a number of discoveries.
One is that anti-aliasing solutions are a lot more interesting than I was expecting and another is that it seems like there is a knowledge gap for information on these methods and associated technologies.
As I have been doing literature review I have encountered some descriptions and explanations that are later shown to be incomplete or incorrect by a more authoritative source.
In some cases these more authoritative sources are technical documents and research articles, which may need the appropriate graduate-level experience and training to fully comprehend.
As my degree is in mathematics and not computer science or graphics engineering, I cannot claim full comprehension, but after reading some sentences and paragraphs over enough times and sleeping on it, I think I have achieved a fair level of understanding.
This does mean, though, that while I will do my best to share with you correct information, it is entirely possible my understanding is flawed and what I share will be wrong.
My apologies if this is the case, both to those of you who do know better and those of you who I might be misinforming.

Something else I feel I should mention is that I have been working on this project on-and-off for months.
Some of you may have noticed comments I made in other articles and reviews talking about a performance issue I encountered with my RX Vega 64.
It was actually when collecting data for this article that I discovered the issue.
To be specific, it seemed that, under certain circumstances, it was possible for the GPU fan speed to be primarily influenced by the core clock rather than by the temperature, allowing it to reach temperatures causing it to throttle and not keep the fan speed high enough to lower temperatures.
This issue had improved some, and was also not always present, but then came the release of Radeon Software Adrenalin 2019 Edition that has made some changes to the fan profile system.
I believe these changes have also addressed what I was encountering, or at least should ensure the issue will be consistent across the multiple runs I made.
In any case, I decided to recollect performance data so this can be a true Serious Statistics article.

(One last aside; it took me months to realize the title Serious Statistics: The Aliasing Adventure has an appropriate initialism of SSAA.
I am somewhat disappointed in myself for that.)

What I suspect is a good place to start for this article is an explanation for why it is called 'anti-aliasing' as opposed to something like 'anti-jaggies.'
