\section{Adaptive Sample, Selectively Applying Super-Sampling}

Before getting to the post-processing filters, I want to cover another optimization to super-sampling that I have come across in some literature, but I cannot say has ever been common in games; Adaptive sampling.
Though mentioned in some of what I have read, there always seemed to be little or no explanation for it, but then I found that 1986 article on Stochastic sampling\supercite{StochasticSampling} I just talked about.
In this paper it describes it as applying additional rays near edges, and these new rays are placed half way between the previous ones.
Technically it is speaking about ray tracing instead of rasterization here, but the concept is likely similar and applicable to rasterization, but that is an assumption on my part.

Also, I want to clarify that 'adaptive sampling' and 'adaptive anti-aliasing' are not necessarily the same thing.
In effect adaptive sampling could produce an adaptive anti-aliasing effect, but adaptive anti-aliasing can have other meanings, like reducing quality to achieve a certain frame rate.

Based on the description from this paper, of finding edges and increasing the sample count along them, I suspect some might be wondering why we do not see it used.
It does sound like it should be a more efficient version of super-sampling, after all, and so why is multi-sampling the dominant sampling-based method?
I have a theory for that, but like any of my theories in this article, it could be wrong.

Mainly my theory relates to two parts of what I assume is involved with an adaptive sampling process.
One is identifying where the edges are, so the number of samples can be increased.
There may be a number of ways to do this, but it will also need to involve some amount of Z-culling, to avoid increasing samples around occluded edges, which would add to the complexity of the process.
Also, to my knowledge there is no established means for gaming hardware to use different sample patterns at arbitrary pixels.
There would need to be some buffer keeping track of each pixel's pattern, which would also add to the complexity of the process.
(If this is possible though, then we could also see low-sample-count stochastic sampling used to combat aliasing.)

All of this added complexity will make adaptive sampling more difficult to work with, and also harder to predict the performance of.
With multi-sampling, especially with current hardware acceleration, a developer and user can know approximately what the performance hit will be with that method.
Adaptive sampling wants to respond to the scene, so its impact on performance will vary between scenes in one game and between games.
One of the statements in the stochastic sampling paper concerning adaptive sampling is, "it complicates an otherwise simple algorithm."\supercite{StochasticSampling}

With how powerful modern GPUs have become, it would not surprise me if there could be means of applying adaptive sampling.
However, I suspect that multi-sampling will continue to provide comparable visual quality while being easier to use and with potentially better performance.
But who knows, maybe we will see things change after someone decides to give it a new try.
Perhaps, since the paper spoke of it in terms of ray tracing, we will see it return as that continues to be developed.
Combined with other technologies, I could see it providing a means of improving performance or image quality.
